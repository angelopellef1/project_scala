// C Program to find m and c for a straight line given, 
// x and y 
#include <stdio.h> 
  
// function to calculate m and c that best fit points 
// represented by x[] and y[] 
void bestApproximate(int x[], int y[], int n) 
{ 
    int i, j; 
    float m, c, sum_x = 0, sum_y = 0, sum_xy = 0, sum_x2 = 0; 
    for (i = 0; i < n; i++) { 
        sum_x += x[i]; 
        sum_y += y[i]; 
        sum_xy += x[i] * y[i]; 
        sum_x2 += (x[i] * x[i]); 
    } 
  
    m = (n * sum_xy - sum_x * sum_y) / (n * sum_x2 - (sum_x * sum_x)); 
    c = (sum_y - m * sum_x) / n; 
  
    printf("m =% f", m); 
    printf("\nc =% f", c); 
} 
  
// Driver main function 
int main() 
{ 
    int x[] = { 1, 2, 3, 4, 5 }; 
    int y[] = { 14, 27, 40, 55, 68 }; 
    int n = sizeof(x) / sizeof(x[0]); 
    bestApproximate(x, y, n); 
    return 0; 
} 